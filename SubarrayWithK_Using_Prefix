#include <bits/stdc++.h>
using namespace std;

int main() {
    int n;
    cin >> n;
    vector<int> ve(n);
    for (int i = 0; i < n; i++) {
        cin >> ve[i];
    }

    int target;
    cin >> target;

    map<int, int> mpp;
    int prefix_sum = 0, max_length = 0;

    for (int i = 0; i < n; i++) {
        prefix_sum += ve[i];

        if (prefix_sum == target) {
            max_length = i + 1;
        }

        if (mpp.find(prefix_sum - target) != mpp.end()) {
            int len = i - mpp[prefix_sum - target];
            max_length = max(max_length, len);
        }

        if (mpp.find(prefix_sum) == mpp.end()) {
            mpp[prefix_sum] = i;
        }
    }

    cout << max_length << endl;
    return 0;
}
